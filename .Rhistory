# load data
act = read.csv("activity.csv")
# process/transform data
table(act)
head(act)
names(act)
totalSteps<-aggregate(steps~date,data=act,sum,na.rm=TRUE)
head(totalSteps)
# make a histogram
hist(totalSteps$steps)
mean(totalSteps$steps)
median(totalSteps$steps)
?histogram
?hist
title(main="main title", sub="sub-title", xlab="x-axis label", ylab="y-axis label")
temp
intervals
getwd()
knit2html()
library(knittr)
library(knitr)
knit2html()
?knitr
?knit2html()
getwd()
knit2html("C:/Users/pmechant/datasciencecoursera/RepData_PeerAssessment1/PA1_template.Rmd")
knit2html("C:/Users/pmechant/datasciencecoursera/RepData_PeerAssessment1/PA1_template.Rmd")
library(knitr)
knit2html("C:/Users/pmechant/datasciencecoursera/RepData_PeerAssessment1/PA1_template.Rmd")
getwd()
if(!file.exists("StormData.csv.bz2")) {
url <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
download.file(url, destfile="StormData.csv.bz2")
}
stormData <- read.csv("StormData.csv.bz2", stringsAsFactors=F)
#summary (stormData)
#head(stormData)
populationHealthFatalities <- aggregate(FATALITIES ~ EVTYPE, data = stormData, FUN = sum)
populationHealthFatalitiesInjuries <- aggregate(INJURIES ~ evtype, data = stormData, FUN = sum)
populationHealthFatalitiesOrdered <- populationHealthFatalities[order(populationHealthFatalities$FATALITIES, decreasing = T), ]
populationHealthFatalitiesInjuriesOrdered <- populationHealthFatalitiesInjuries[order(populationHealthFatalitiesInjuries$INJURIES, decreasing = T), ]
library(ggplot2)
ggplot(populationHealthFatalitiesOrdered[1:5, ], aes(EVTYPE, FATALITIES)) + geom_bar(stat = "identity") +
ylab("Fatalities") + xlab("Event Type") + ggtitle("Top Five Types of Events Causing Deaths Across the U.S")
if(!file.exists("StormData.csv.bz2")) {
url <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
download.file(url, destfile="StormData.csv.bz2")
}
stormData <- read.csv("StormData.csv.bz2", stringsAsFactors=F)
#summary (stormData)
#head(stormData)
#we will only use data from 1996 onwards because of this: http://www.ncdc.noaa.gov/stormevents/details.jsp?type=eventtype
populationHealthFatalities <- aggregate(FATALITIES ~ EVTYPE, data = stormData, FUN = sum)
populationHealthFatalitiesInjuries <- aggregate(INJURIES ~ evtype, data = stormData, FUN = sum)
populationHealthFatalitiesOrdered <- populationHealthFatalities[order(populationHealthFatalities$FATALITIES, decreasing = T), ]
populationHealthFatalitiesInjuriesOrdered <- populationHealthFatalitiesInjuries[order(populationHealthFatalitiesInjuries$INJURIES, decreasing = T), ]
library(ggplot2)
ggplot(populationHealthFatalitiesOrdered[1:5, ], aes(EVTYPE, FATALITIES)) + geom_bar(stat = "identity") +
ylab("Fatalities") + xlab("Event Type") + ggtitle("Top Five Types of Events Causing Deaths Across the U.S")
if(!file.exists("StormData.csv.bz2")) {
url <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"
download.file(url, destfile="StormData.csv.bz2")
}
dfData <- read.csv("StormData.csv.bz2", stringsAsFactors=F)
#summary (stormData)
#head(stormData)
#we will use only the rows that we need
stormData <- (dfData[, c(8, 23:28)])
#we will only use data from 1996 onwards because of this: http://www.ncdc.noaa.gov/stormevents/details.jsp?type=eventtype
populationHealthFatalities <- aggregate(FATALITIES ~ EVTYPE, data = stormData, FUN = sum)
populationHealthFatalitiesInjuries <- aggregate(INJURIES ~ EVTYPE, data = stormData, FUN = sum)
populationHealthFatalitiesOrdered <- populationHealthFatalities[order(populationHealthFatalities$FATALITIES, decreasing = T), ]
populationHealthFatalitiesInjuriesOrdered <- populationHealthFatalitiesInjuries[order(populationHealthFatalitiesInjuries$INJURIES, decreasing = T), ]
library(ggplot2)
ggplot(populationHealthFatalitiesOrdered[1:5, ], aes(EVTYPE, FATALITIES)) + geom_bar(stat = "identity") +
ylab("Fatalities") + xlab("Event Type") + ggtitle("Top Five Types of Events Causing Deaths Across the U.S")
head(stormData)
head(dfData)
head(dfData$BGN_DATE)
?strptime()
strptime(stormData$BGN_DATE, format="Â´%j")
head(dfData$BGN_DATE)
strptime(stormData$BGN_DATE, format="%j")
strptime(stormData$BGN_DATE, format="%j")
head(dfData$BGN_DATE)
stormData$BGN_DATE <- strptime(stormData$BGN_DATE, format="%j")
stormData$BGN_DATE <- as.POSIXlt(stormData$BGN_DATE)+1900
head(stormData)
stormData <- (dfData[, c(1, 8, 23:28)])
head(stormData)
head(dfData)
stormData <- (dfData[, c(2, 8, 23:28)])
head(stormData)
stormData$BGN_DATE <- strptime(stormData$BGN_DATE, type="%j")
stormData$BGN_DATE <- strptime(stormData$BGN_DATE, format="%j")
head(stormData)
stormData$BGN_DATE <- strptime(stormData$BGN_DATE, format="%y")
head(stormData)
stormData <- (dfData[, c(2, 8, 23:28)])
# as.POSIXlt(stormData$BGN_DATE)+1900
head(stormData)
stormData$BGN_DATE <- strptime(stormData$BGN_DATE, format="%y")
head(stormData)
stormData <- (dfData[, c(2, 8, 23:28)])
head(stormData)
stormData <- (dfData[, c(2, 8, 23:28)])
stormData$BGN_DATE <- strptime(stormData$BGN_DATE, "%y")
head(stormData)
stormData <- (dfData[, c(2, 8, 23:28)])
stormData$BGN_DATE <- as.POSIXlt(stormData$BGN_DATE)+1900
# as.POSIXlt(stormData$BGN_DATE)+1900
head(stormData)
stormData$year <- year(mdy_hms(as.character(stormDataD$BGN_DATE)))
library(tidyr)
install.packages("tidyr")
stormData$year <- year(mdy_hms(as.character(stormDataD$BGN_DATE)))
#we will only use data from 1996 onwards because of this: http://www.ncdc.noaa.gov/stormevents/details.jsp?type=eventtype
head(stormData)
head(stormData)
stormData$BGN_DATE <- year(mdy_hms(as.character(stormDataD$BGN_DATE)))
library(tidyr)
stormData$BGN_DATE <- year(mdy_hms(as.character(stormDataD$BGN_DATE)))
library(tidyr)
stormData$BGN_DATE <- year(mdy_hms(as.character(stormDataD$BGN_DATE)))
stormData$BGN_DATE <- year(mdy_hms(as.character(stormData$BGN_DATE)))
stormData$year <- year(mdy_hms(as.character(stormData$BGN_DATE)))
library(tidyr)
stormData$year <- year(mdy_hms(as.character(stormData$BGN_DATE)))
?tidyr
library(tidyr)
stormData$year <- year(mdy_hms(as.character(stormData$BGN_DATE)))
stormData <- (dfData[, c(1:2, 8, 23:28)])
head(stormData)
head(dfData)
stormData <- (dfData[, c(2, 7:8, 23:28)])
head(stormData)
stormData$BGN_DATE <- as.Date(stormData$BGN_DATE, "%m/%d/%Y")
summary(stormData$BGN_DATE)
head(stormData)
stormData$BGN_DATE <- strptime(stormData$BGN_DATE, %y)
stormData$BGN_DATE <- strptime(stormData$BGN_DATE, "%y")
head(stormData)
stormData <- (dfData[, c(2, 7:8, 23:28)])
#library(tidyr)
#stormData$year <- year(mdy_hms(as.character(stormData$BGN_DATE)))
#we will only use data from 1996 onwards because of this: http://www.ncdc.noaa.gov/stormevents/details.jsp?type=eventtype
stormData$BGN_DATE <- as.Date(stormData$BGN_DATE, "%Y")
#stormData$BGN_DATE <- strptime(stormData$BGN_DATE, "%y")
summary(stormData$BGN_DATE)
head(stormData)
stormData <- (dfData[, c(2, 7:8, 23:28)])
#library(tidyr)
#stormData$year <- year(mdy_hms(as.character(stormData$BGN_DATE)))
#we will only use data from 1996 onwards because of this: http://www.ncdc.noaa.gov/stormevents/details.jsp?type=eventtype
stormData$BGN_DATE <- as.Date(stormData$BGN_DATE, "%m/%d/%Y")
#stormData$BGN_DATE <- strptime(stormData$BGN_DATE, "%y")
summary(stormData$BGN_DATE)
# Display all states in the initial dataset
unique(stormData$STATE)
data(state)
populationHealthFatalities <- aggregate(FATALITIES ~ EVTYPE, data = stormData, FUN = sum)
head(state)
state
factor(unique(state.abb))
stormData <- (dfData[, c(2, 7:8, 23:28)])
#library(tidyr)
#stormData$year <- year(mdy_hms(as.character(stormData$BGN_DATE)))
#we will only use data from 1996 onwards because of this: http://www.ncdc.noaa.gov/stormevents/details.jsp?type=eventtype
stormData$BGN_DATE <- as.Date(stormData$BGN_DATE, "%m/%d/%Y")
#stormData$BGN_DATE <- strptime(stormData$BGN_DATE, "%y")
summary(stormData$BGN_DATE)
# Display all states in the initial dataset
unique(stormData$STATE)
# Compare to vector with 50 U.S. states from the R "state" data set
factor(unique(state.abb))
stormData <- (dfData[, c(2, 7:8, 23:28)])
#library(tidyr)
#stormData$year <- year(mdy_hms(as.character(stormData$BGN_DATE)))
#we will only use data from 1996 onwards because of this: http://www.ncdc.noaa.gov/stormevents/details.jsp?type=eventtype
stormData$BGN_DATE <- as.Date(stormData$BGN_DATE, "%m/%d/%Y")
#stormData$BGN_DATE <- strptime(stormData$BGN_DATE, "%y")
summary(stormData$BGN_DATE)
# Display all states in the initial dataset
unique(stormData$STATE)
# Compare to vector with 50 U.S. states from the R "state" data set
factor(unique(state.abb))
# Only keep the 50 U.S. states in the dataset
stormData <- stormData[stormData$STATE %in% state.abb,]
stormData$STATE <- factor(stormData$STATE)
populationHealthFatalities <- aggregate(FATALITIES ~ EVTYPE, data = stormData, FUN = sum)
populationHealthFatalitiesInjuries <- aggregate(INJURIES ~ EVTYPE, data = stormData, FUN = sum)
populationHealthFatalitiesOrdered <- populationHealthFatalities[order(populationHealthFatalities$FATALITIES, decreasing = T), ]
populationHealthFatalitiesInjuriesOrdered <- populationHealthFatalitiesInjuries[order(populationHealthFatalitiesInjuries$INJURIES, decreasing = T), ]
library(ggplot2)
ggplot(populationHealthFatalitiesOrdered[1:5, ], aes(EVTYPE, FATALITIES)) + geom_bar(stat = "identity") +
ylab("Fatalities") + xlab("Event Type") + ggtitle("Top Five Types of Events Causing Deaths Across the U.S")
stormDataRaw <- (dfData[, c(2, 7:8, 23:28)])
#library(tidyr)
#stormData$year <- year(mdy_hms(as.character(stormData$BGN_DATE)))
#we will only use data from 1996 onwards because of this: http://www.ncdc.noaa.gov/stormevents/details.jsp?type=eventtype
dim(stormDataRaw)
library(dplyr)
stormData <- filter(stormDataRaw, as.numeric(format(as.Date(as.character(stormDataRaw$BGN_DATE), "%m/%d/%Y %H:%M:%S"), "%Y")) >= 1996)
dim(stormData)
#stormData$BGN_DATE <- as.Date(stormData$BGN_DATE, "%m/%d/%Y")
#stormData$BGN_DATE <- strptime(stormData$BGN_DATE, "%y")
#summary(stormData$BGN_DATE)
# Display all states in the initial dataset
unique(stormData$STATE)
# Compare to vector with 50 U.S. states from the R "state" data set
factor(unique(state.abb))
# Only keep the 50 U.S. states in the dataset
stormData <- stormData[stormData$STATE %in% state.abb,]
stormData$STATE <- factor(stormData$STATE)
populationHealthFatalities <- aggregate(FATALITIES ~ EVTYPE, data = stormData, FUN = sum)
populationHealthFatalitiesInjuries <- aggregate(INJURIES ~ EVTYPE, data = stormData, FUN = sum)
populationHealthFatalitiesOrdered <- populationHealthFatalities[order(populationHealthFatalities$FATALITIES, decreasing = T), ]
populationHealthFatalitiesInjuriesOrdered <- populationHealthFatalitiesInjuries[order(populationHealthFatalitiesInjuries$INJURIES, decreasing = T), ]
library(ggplot2)
ggplot(populationHealthFatalitiesOrdered[1:5, ], aes(EVTYPE, FATALITIES)) + geom_bar(stat = "identity") +
ylab("Fatalities") + xlab("Event Type") + ggtitle("Top Five Types of Events Causing Deaths Across the U.S")
# http://rpubs.com/ghassansalloum/57183
head(stormData)
stormDataRaw <- (dfData[, c(2, 7:8, 23:28)])
#library(tidyr)
#stormData$year <- year(mdy_hms(as.character(stormData$BGN_DATE)))
#we will only use data from 1996 onwards because of this: http://www.ncdc.noaa.gov/stormevents/details.jsp?type=eventtype
#at from 1950-1955, only TORNADO events were recorded; from 1955-1996 only TORNADO, THUNDERSTORM WIND, and HAIL events were recorded. It was only starting in 1996 that all 48 event types were recorded. Thus, in the early years, the data are severely biased towards a subset of the weather events, since not all weather events were recorded.
#So, for the purposes of this preliminary analysis, only weather events that started in or after 1996 will be used (using the BGN_DATE to get the date the weather event started):dim(stormDataRaw)
library(dplyr)
stormData <- filter(stormDataRaw, as.numeric(format(as.Date(as.character(stormDataRaw$BGN_DATE), "%m/%d/%Y %H:%M:%S"), "%Y")) >= 1996)
dim(stormData)
#stormData$BGN_DATE <- as.Date(stormData$BGN_DATE, "%m/%d/%Y")
#stormData$BGN_DATE <- strptime(stormData$BGN_DATE, "%y")
#summary(stormData$BGN_DATE)
# Display all states in the initial dataset
unique(stormData$STATE)
# Compare to vector with 50 U.S. states from the R "state" data set
factor(unique(state.abb))
# Only keep the 50 U.S. states in the dataset
stormData <- stormData[stormData$STATE %in% state.abb,]
stormData$STATE <- factor(stormData$STATE)
summary(stormData)
# clean event column
# trim whitespaces
stormData$EVTYPE <- trim(stormData$EVTYPE)
library(plyr)
stormData$EVTYPE <- trim(stormData$EVTYPE)
?trim
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
stormData$EVTYPE <- trim(stormData$EVTYPE)
summary(stormData)
listEvents<-as.character(stormData$EVTYPE)
listEvents<- gsub(".*THUNDERSTORM.*", "THUNDERSTORM", evtypelist, ignore.case=TRUE)
listEvents<-as.character(stormData$EVTYPE)
listEvents<- gsub(".*THUNDERSTORM.*", "THUNDERSTORM", listEvents, ignore.case=TRUE)
listEvents<- gsub(".*TSTM.*",         "THUNDERSTORM", listEvents, ignore.case=TRUE)
listEvents<- gsub(".*TORNADO.*",      "TORNADO",      listEvents, ignore.case=TRUE)
listEvents<- gsub(".*HURRICANE.*",    "HURRICANE",    listEvents, ignore.case=TRUE)
listEvents<- gsub(".*HEAT.*",         "HEAT",         listEvents, ignore.case=TRUE)
listEvents<- gsub(".*WARM.*",         "WARM",         listEvents, ignore.case=TRUE)
listEvents<- gsub(".*SNOW.*",         "SNOW",         listEvents, ignore.case=TRUE)
listEvents<- gsub(".*COLD.*",         "COLD",         listEvents, ignore.case=TRUE)
listEvents<- gsub(".*COOL.*",         "COLD",         listEvents, ignore.case=TRUE)
listEvents<- gsub(".*RAIN.*",         "RAIN",         listEvents, ignore.case=TRUE)
listEvents<- gsub(".*SURF.*",         "SURF",         listEvents, ignore.case=TRUE)
listEvents<- gsub(".*FLOOD.*",        "FLOOD",        listEvents, ignore.case=TRUE)
listEvents<- gsub(".*RISING WATER.*", "FLOOD",        listEvents, ignore.case=TRUE)
listEvents<- gsub(".*AVALAN.*",       "AVALANCHE",    listEvents, ignore.case=TRUE)
listEvents<- gsub(".*MUDSLIDE.*",     "MUDSLIDE",     listEvents, ignore.case=TRUE)
listEvents<- gsub(".*LANDSLIDE.*",    "LANDSLIDE",    listEvents, ignore.case=TRUE)
listEvents<- gsub(".*FIRE.*",         "FIRE",         listEvents, ignore.case=TRUE)
listEvents<- gsub(".*SEAS.*",         "SEA",          listEvents, ignore.case=TRUE)
listEvents<- gsub(".*SWELLS.*",       "SEA",          listEvents, ignore.case=TRUE)
listEvents<- gsub(".*WAVE.*",         "SEA",          listEvents, ignore.case=TRUE)
listEvents<- gsub(".*BEACH.*",        "BEACH",        listEvents, ignore.case=TRUE)
listEvents<- gsub(".*BITTER.*",       "COLD",         evtypelist, ignore.case=TRUE)
listEvents<- gsub(".*BITTER.*",       "COLD",         listEvents, ignore.case=TRUE)
stormData$EVTYPE <- listEvents
summary(stormData)
populationHealthFatalities <- aggregate(FATALITIES ~ EVTYPE, data = stormData, FUN = sum)
populationHealthFatalities2 <- populationHealthFatalities$FATALITIES > 0
populationHealthFatalitiesInjuries <- aggregate(INJURIES ~ EVTYPE, data = stormData, FUN = sum)
populationHealthFatalitiesOrdered <- populationHealthFatalities2[order(populationHealthFatalities2$FATALITIES, decreasing = T), ]
populationHealthFatalitiesInjuriesOrdered <- populationHealthFatalitiesInjuries[order(populationHealthFatalitiesInjuries$INJURIES, decreasing = T), ]
library(ggplot2)
ggplot(populationHealthFatalitiesOrdered[1:5, ], aes(EVTYPE, FATALITIES)) + geom_bar(stat = "identity") +
ylab("Fatalities") + xlab("Event Type") + ggtitle("Top Five Types of Events Causing Deaths Across the U.S")
# http://rpubs.com/ghassansalloum/57183
# https://rpubs.com/Schmonkey/Coursera1
dim(populationHealthFatalities2)
head(populationHealthFatalities2)
summary(populationHealthFatalities2)
